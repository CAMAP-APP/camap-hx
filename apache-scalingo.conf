# Main apache config for Scalingo environment
# inspired by https://github.com/hmdc/heroku-buildpack-apache/blob/master/config/httpd.conf
# and Debian's apache config

# Security
ServerTokens OS
ServerSignature On
TraceEnable On

# points to the place where Debian packages are unpacked by apt-buildpack
# See https://github.com/Scalingo/apt-buildpack/blob/master/bin/compile
ServerRoot ${PSEUDO_CHROOT}/etc/apache2

Timeout 120
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15
LimitRequestFieldSize 8190
PidFile /app/apache.pid

HostnameLookups Off

# Include module configuration: maintainer scripts are not run when
# deb packages are "installed" in scalingo environment. And load path
# of the modules are no longer applicable, so the load instructions
# must be updated with pseudo-chroot path.

# Load all modules usually found in /etc/apache2/mods-enabled

# Depends: authn_core
LoadModule access_compat_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_access_compat.so
LoadModule alias_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_alias.so
# Depends: authn_core
LoadModule auth_basic_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_auth_basic.so
LoadModule authn_core_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_authn_core.so
LoadModule authn_file_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_authn_file.so
LoadModule authz_core_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_authz_core.so
# Depends: authz_core
LoadModule authz_host_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_authz_host.so
# Depends: authz_core
LoadModule authz_user_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_authz_user.so
LoadModule autoindex_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_autoindex.so
# Depends: filter
LoadModule deflate_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_deflate.so
LoadModule dir_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_dir.so
LoadModule env_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_env.so
LoadModule filter_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_filter.so
LoadModule mime_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_mime.so
# Conflicts: mpm_event mpm_worker
LoadModule mpm_prefork_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_mpm_prefork.so
LoadModule negotiation_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_negotiation.so
LoadModule reqtimeout_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_reqtimeout.so
LoadModule setenvif_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_setenvif.so
LoadModule status_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_status.so

# now load the configurations of these modules
Include mods-available/alias.conf
Include mods-available/autoindex.conf
Include mods-available/deflate.conf
Include mods-available/dir.conf
Include mods-available/mime.conf
Include mods-available/mpm_prefork.conf
Include mods-available/negotiation.conf
Include mods-available/reqtimeout.conf
Include mods-available/setenvif.conf
Include mods-available/status.conf

# load and configure what we need
LoadModule rewrite_module ${PSEUDO_CHROOT}/usr/lib/apache2/modules/mod_rewrite.so
LoadModule neko_module ${PSEUDO_CHROOT}/usr/lib/x86_64-linux-gnu/neko/mod_neko2.ndll
Include mods-available/neko.conf

# Log config taken from Debian config

# The following directives define some format nicknames for use with
# a CustomLog directive.
#
# These deviate from the Common Log Format definitions in that they use %O
# (the actual bytes sent including headers) instead of %b (the size of the
# requested file), because the latter makes it impossible to detect partial
# requests.
#
# Note that the use of %{X-Forwarded-For}i instead of %h is not recommended.
# Use mod_remoteip instead.
#
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %O" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent


# do not include other-vhosts-access-log.conf (breaks when non root user)
# from conf-enabled/security.conf
ServerTokens Prod
ServerSignature On
TraceEnable Off

ErrorLog "/dev/stdout"

Listen ${PORT}

<VirtualHost *:${PORT}>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        DocumentRoot /app/www/

        <Directory /app>
            AllowOverride All
            Require all granted
        </Directory>

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog "/dev/stdout"
        CustomLog "/dev/stdout" combined
</VirtualHost>

TransferLog "/dev/stdout"
LogLevel warn
EnableSendfile On

